image: "python:3.10"

before_script:
  - python --version

after_script:
  - docker-compose down -v

stages:
  - lint
  - build
  - security
  - test
  - deploy

lint:
  stage: lint
  before_script:
    - pip3 install flake8
  script:
  - flake8 .
  allow_failure: true

package:security:
  stage: build
  before_script:
    - pip3 install safety
    - wget https://github.com/pyupio/safety-db/raw/master/data/insecure_full.json
    - wget https://github.com/pyupio/safety-db/raw/master/data/insecure.json
  script:
    - safety check --full-report --db . -r requirements/development.txt
    - safety check --full-report --db . -r requirements/production.txt


.anchore_scan:
  image: anchore/engine-cli:latest
  stage: security
  tags:
    - docker-privileged
  variables:
    # Configure for recursive submodule cloning
    GIT_SUBMODULE_STRATEGY: recursive

services:
  - docker:dind

test:unit:
  stage: test
  image: hmajid2301/dind-docker-compose
  script:
    - docker-compose -f docker-compose-test.yaml up --build --exit-code-from test test db | grep -v "django.db.backends.schema\|faker.factory\|MOD schema\|MOD factory\|bad news\|autovacuum process"
  after_script:
    - docker-compose -f docker-compose-test.yaml down -v

deploy_staging:
  stage: deploy
  environment:
    name: staging
    url: demo.skp.aitc.co.id
  script:
    - ssh $SSH_USER@$VM_IPADDRESS "cd /opt/apps/skp-tulungagung && git checkout main && git pull origin main && cp .env.production .env  && docker-compose up -d --build"
  before_script:
  - 'command -v ssh-agent >/dev/null || ( apk add --update openssh )' 
  - eval $(ssh-agent -s)
  - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
  - mkdir -p ~/.ssh
  - chmod 700 ~/.ssh
  - ssh-keyscan $VM_IPADDRESS >> ~/.ssh/known_hosts
  - chmod 644 ~/.ssh/known_hosts
  only:
    - main
  when: manual
  allow_failure: false




